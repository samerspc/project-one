window.isMobile = !1;
if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
    window.isMobile = !0
}

function t_throttle(fn, threshhold, scope) {
    var last;
    var deferTimer;
    threshhold || (threshhold = 250);
    return function () {
        var context = scope || this;
        var now = +new Date();
        var args = arguments;
        if (last && now < last + threshhold) {
            clearTimeout(deferTimer);
            deferTimer = setTimeout(function () {
                last = now;
                fn.apply(context, args)
            }, threshhold)
        } else {
            last = now;
            fn.apply(context, args)
        }
    }
}

function t967_setLogoPadding(recid) {
    var rec = document.getElementById('rec' + recid);
    if (!rec || window.innerWidth <= 980) return;
    var menu = rec.querySelector('.t967');
    var logo = menu ? menu.querySelector('.t967__logowrapper') : null;
    var leftWrap = menu ? menu.querySelector('.t967__leftwrapper') : null;
    var rightWrap = menu ? menu.querySelector('.t967__rightwrapper') : null;
    var logoWidth = logo ? logo.offsetWidth : 0;
    if (leftWrap) leftWrap.style.paddingRight = ((logoWidth / 2) + 50) + 'px';
    if (rightWrap) rightWrap.style.paddingRight = ((logoWidth / 2) + 50) + 'px'
}

function t390_initPopup(recId) {
    var rec = document.getElementById('rec' + recId);
    if (!rec) return;
    var container = rec.querySelector('.t390');
    if (!container) return;
    rec.setAttribute('data-animationappear', 'off');
    rec.style.opacity = 1;
    var popup = rec.querySelector('.t-popup');
    var popupTooltipHook = popup.getAttribute('data-tooltip-hook');
    var analitics = popup.getAttribute('data-track-popup');
    var popupCloseBtn = popup.querySelector('.t-popup__close');
    var hrefs = rec.querySelectorAll('a[href*="#"]');
    var escapeEvent = t390_escClosePopup.bind(this, recId);
    if (popupTooltipHook) {
        t_onFuncLoad('t_popup__addAttributesForAccessibility', function () {
            t_popup__addAttributesForAccessibility(popupTooltipHook)
        });
        document.addEventListener('click', function (event) {
            var target = event.target;
            var href = target.closest('a[href="' + popupTooltipHook + '"]') ? target : !1;
            if (!href) return;
            event.preventDefault();
            t390_showPopup(recId, escapeEvent);
            t_onFuncLoad('t_popup__resizePopup', function () {
                t_popup__resizePopup(recId)
            });
            t390__lazyLoad();
            if (analitics && window.Tilda) {
                Tilda.sendEventToStatistics(analitics, popupTooltipHook)
            }
        });
        t_onFuncLoad('t_popup__addClassOnTriggerButton', function () {
            t_popup__addClassOnTriggerButton(document, popupTooltipHook)
        })
    }
    popup.addEventListener('scroll', t_throttle(function () {
        t390__lazyLoad()
    }));
    popup.addEventListener('click', function (event) {
        if (event.target === this) t390_closePopup(recId, escapeEvent)
    });
    popupCloseBtn.addEventListener('click', function () {
        t390_closePopup(recId, escapeEvent)
    });
    for (var i = 0; i < hrefs.length; i++) {
        hrefs[i].addEventListener('click', function () {
            var url = this.getAttribute('href');
            if (!url || url.substring(0, 7) != '#price:') {
                t390_closePopup(recId, escapeEvent);
                if (!url || url.substring(0, 7) == '#popup:') {
                    setTimeout(function () {
                        if (typeof t_triggerEvent === 'function') t_triggerEvent(document.body, 'popupShowed');
                        document.body.classList.add('t-body_popupshowed')
                    }, 300)
                }
            }
        })
    }
    var curPath = window.location.pathname;
    var curFullPath = window.location.origin + curPath;
    var isAndroid = /(android)/i.test(navigator.userAgent);
    if (isAndroid) {
        var selects = 'a[href^="#"]:not([href="#"]):not([href^="#price"]):not([href^="#popup"]):not([href^="#prodpopup"]):not([href^="#order"]):not([href^="#!"]),' + 'a[href^="' + curPath + '#"]:not([href*="#!/tproduct/"]):not([href*="#!/tab/"]):not([href*="#popup"]),' + 'a[href^="' + curFullPath + '#"]:not([href*="#!/tproduct/"]):not([href*="#!/tab/"]):not([href*="#popup"])';
        var selectors = rec.querySelectorAll(selects);
        for (var i = 0; i < selectors.length; i++) {
            selectors[i].addEventListener('click', function (event) {
                var hash = this.hash.trim();
                if (window.location.hash) {
                    setTimeout(function () {
                        window.location.href = hash
                    }, 50)
                }
            })
        }
    }

    function t390_escClosePopup(recId) {
        if (arguments[1].key === 'Escape') t390_closePopup(recId, escapeEvent)
    }
}

function t390_showPopup(recId, escapeEvent) {
    var rec = document.getElementById('rec' + recId);
    if (!rec) return;
    var container = rec.querySelector('.t390');
    if (!container) return;
    var windowWidth = window.innerWidth;
    var screenMin = rec.getAttribute('data-screen-min');
    var screenMax = rec.getAttribute('data-screen-max');
    if (screenMin && windowWidth < parseInt(screenMin, 10)) return;
    if (screenMax && windowWidth > parseInt(screenMax, 10)) return;
    var popup = rec.querySelector('.t-popup');
    var documentBody = document.body;
    t_onFuncLoad('t_popup__showPopup', function () {
        t_popup__showPopup(popup)
    });
    if (typeof t_triggerEvent === 'function') t_triggerEvent(document.body, 'popupShowed');
    documentBody.classList.add('t-body_popupshowed');
    documentBody.classList.add('t390__body_popupshowed');
    document.addEventListener('keydown', escapeEvent)
}

function t390_closePopup(recId, escapeEvent) {
    var rec = document.getElementById('rec' + recId);
    var popup = rec.querySelector('.t-popup');
    var popupActive = document.querySelector('.t-popup.t-popup_show');
    if (popup === popupActive) {
        if (typeof t_triggerEvent === 'function') t_triggerEvent(document.body, 'popupHidden');
        document.body.classList.remove('t-body_popupshowed');
        document.body.classList.remove('t390__body_popupshowed')
    }
    popup.classList.remove('t-popup_show');
    t_onFuncLoad('t_popup__addFocusOnTriggerButton', function () {
        t_popup__addFocusOnTriggerButton()
    });
    setTimeout(function () {
        var popupHide = document.querySelectorAll('.t-popup:not(.t-popup_show)');
        for (var i = 0; i < popupHide.length; i++) {
            popupHide[i].style.display = 'none'
        }
    }, 300);
    document.removeEventListener('keydown', escapeEvent)
}

function t390_sendPopupEventToStatistics(popupName) {
    var virtPage = '/tilda/popup/';
    var virtTitle = 'Popup: ';
    if (popupName.substring(0, 7) == '#popup:') {
        popupName = popupName.substring(7)
    }
    virtPage += popupName;
    virtTitle += popupName;
    if (window.Tilda && typeof Tilda.sendEventToStatistics == 'function') {
        Tilda.sendEventToStatistics(virtPage, virtTitle, '', 0)
    } else {
        if (ga) {
            if (window.mainTracker != 'tilda') {
                ga('send', {hitType: 'pageview', page: virtPage, title: virtTitle})
            }
        }
        if (window.mainMetrika && window[window.mainMetrika]) {
            window[window.mainMetrika].hit(virtPage, {title: virtTitle, referer: window.location.href})
        }
    }
}

function t390__lazyLoad() {
    var allRecords = document.getElementById('allrecords');
    if (window.lazy === 'y' || (allRecords && allRecords.getAttribute('data-tilda-lazy') === 'yes')) {
        t_onFuncLoad('t_lazyload_update', function () {
            t_lazyload_update()
        })
    }
}

function t367_createCookie(cookieName, cookieValue, cookieTime) {
    var expires = '';
    if (cookieTime) {
        if (Number(cookieTime) > 9999999) {
            cookieTime = 9999999
        }
        var date = new Date();
        date.setTime(date.getTime() + cookieTime * 24 * 60 * 60 * 1000);
        expires = '; expires=' + date.toGMTString()
    }
    document.cookie = cookieName + '=' + cookieValue + expires + '; path=/'
}

function t367_readCookie(cookieName) {
    cookieName = cookieName + '=';
    var allCookies = document.cookie.split(';');
    for (var i = 0; i < allCookies.length; i++) {
        var cookie = allCookies[i];
        while (cookie.charAt(0) === ' ') {
            cookie = cookie.substring(1, cookie.length)
        }
        if (cookie.indexOf(cookieName) === 0) {
            return cookie.substring(cookieName.length, cookie.length)
        }
    }
    return null
}

function t367_autoInit(recid) {
    var rec = document.querySelector('#rec' + recid);
    if (!rec) return;
    var screenMin = rec.getAttribute('data-screen-min');
    var screenMax = rec.getAttribute('data-screen-max');
    var windowWidth = window.innerWidth;
    if (typeof screenMin === 'string') {
        if (windowWidth < parseInt(screenMin, 10)) {
            return !0
        }
    }
    if (typeof screenMax === 'string') {
        if (windowWidth > parseInt(screenMax, 10)) {
            return !0
        }
    }
    var openerLink = rec.querySelector('.t367__opener');
    if (!t367_isPopupRecVisible(openerLink)) return;
    var linkhook = openerLink.getAttribute('href');
    if (!linkhook) return;
    var cookieName = openerLink.getAttribute('data-cookie-name');
    var cookieTime = openerLink.getAttribute('data-cookie-time');
    var cookieValue = 't367cookie';
    var cookie = t367_readCookie(cookieName);
    var timeout = parseInt(openerLink.getAttribute('data-trigger-time'), 10) * 1000;
    var wrapperBlock = rec.querySelector('.t367');
    if (!wrapperBlock) return;
    if (cookie) wrapperBlock.innerHTML = ''; else if (openerLink) {
        setTimeout(function () {
            openerLink.click();
            wrapperBlock.innerHTML = '';
            t367_createCookie(cookieName, cookieValue, cookieTime)
        }, timeout)
    }
}

function t367_isPopupRecVisible(openerLink) {
    if (openerLink) {
        var linkText = openerLink.getAttribute('href');
        var popupElement = document.querySelector('.t-popup[data-tooltip-hook="' + linkText + '"]');
        if (popupElement) {
            var popupElementRec = popupElement.closest('.r');
            var minScreen = popupElementRec.getAttribute('data-screen-min');
            if (minScreen && minScreen !== '') {
                minScreen = minScreen.replace('px', '');
                if (parseInt(minScreen, 10) > window.innerWidth) {
                    return !1
                }
            }
            var maxScreen = popupElementRec.getAttribute('data-screen-max');
            if (maxScreen && maxScreen !== '') {
                maxScreen = maxScreen.replace('px', '');
                if (parseInt(maxScreen, 10) < window.innerWidth) {
                    return !1
                }
            }
        }
        return !0
    }
}

function t996_init(recid, pad) {
    var rec = document.getElementById('rec' + recid);
    if (!rec) return;
    t996__calcCoverWidth(rec);
    window.addEventListener('resize', t_throttle(function () {
        t996__calcCoverWidth(rec)
    }, 300))
}

function t996__calcCoverWidth(rec) {
    var cover = rec.querySelector('.t996__cover-wrapper');
    var container = rec.querySelector('.t996__container');
    var containerWidth = container ? container.offsetWidth : 0;
    var windowWidth = window.innerWidth;
    var coverWidth = windowWidth - ((windowWidth - containerWidth) / 2);
    if (cover) cover.style.width = coverWidth + 'px'
}

function t585_init(recId) {
    var rec = document.getElementById('rec' + recId);
    if (!rec) return;
    var accordion = rec.querySelectorAll('.t585__accordion')[0];
    var headers = rec.querySelectorAll('.t585__header');
    var isLazy = document.getElementById('allrecords').getAttribute('data-tilda-lazy');
    var accordionScroll;
    if (accordion) {
        accordionScroll = accordion.getAttribute('data-scroll-to-expanded');
        accordion = accordion.getAttribute('data-accordion')
    } else {
        accordion = 'false';
        accordionScroll = 'false'
    }
    for (var i = 0; i < headers.length; i++) {
        headers[i].addEventListener('click', function () {
            var element = this;
            var container = element.nextElementSibling;
            var triggerButton = element.querySelector('.t585__trigger-button');
            var activeHeight = 0;
            var isAccordionDown = !1;
            if (triggerButton) {
                var isExpanded = triggerButton.getAttribute('aria-expanded') === 'true';
                triggerButton.setAttribute('aria-expanded', !isExpanded);
                container.hidden = isExpanded
            }
            if (element.classList.contains('t585__opened')) {
                element.classList.remove('t585__opened');
                t585_accordionHide(container)
            } else {
                if (accordionScroll === 'true' && accordion === 'true') {
                    activeHeight = t585__getOldAction(rec);
                    isAccordionDown = t585__getAccordionPosition(headers, element)
                }
                if (accordion === 'true') t585_accordionAllHide(headers);
                element.classList.add('t585__opened');
                container.style.display = 'block';
                var height = container.scrollHeight;
                container.style.maxHeight = '0px';
                setTimeout(function () {
                    container.style.maxHeight = height + 'px';
                    if (accordionScroll === 'true') {
                        t585__calcHeight(element, container, activeHeight, isAccordionDown)
                    }
                }, 0)
            }
            if (window.lazy === 'y' || isLazy === 'yes') {
                t_onFuncLoad('t_lazyload_update', function () {
                    t_lazyload_update()
                })
            }
        })
    }
}

function t585_accordionAllHide(headers) {
    for (var i = 0; i < headers.length; i++) {
        var elementHide = headers[i];
        elementHide.classList.remove('t585__opened');
        t585_accordionHide(elementHide.nextElementSibling)
    }
}

function t585_accordionHide(container) {
    if (!container.style.maxHeight) container.style.maxHeight = container.scrollHeight + 'px';
    setTimeout(function () {
        container.style.maxHeight = '0px'
    }, 0)
}

function t585__getOldAction(rec) {
    var activeHeader = rec.querySelector('.t585__opened');
    var activeHeight = 0;
    if (activeHeader) var activeContainer = activeHeader.nextElementSibling;
    if (activeContainer) activeHeight = activeContainer.offsetHeight;
    return activeHeight
}

function t585__getAccordionPosition(headers, element) {
    var oldIndex;
    var newIndex;
    for (var i = 0; i < headers.length; i++) {
        var header = headers[i];
        if (header.classList.contains('t585__opened')) oldIndex = i;
        if (header === element) newIndex = i
    }
    return oldIndex < newIndex ? !0 : !1
}

function t585__calcHeight(element, container, activeHeight, isAccordionDown) {
    var windowHeight = window.innerHeight;
    var windowScroll = window.scrollY;
    var containerHeight = container.scrollHeight;
    var accordionHeight = containerHeight + element.offsetHeight;
    var elementTopOffset = element.getBoundingClientRect().top + windowScroll;
    var target = isAccordionDown ? elementTopOffset - activeHeight : elementTopOffset;
    var accordionBottomLine = target + accordionHeight;
    var windowBottomLine = windowScroll + windowHeight;
    if (target < windowScroll || accordionHeight > windowHeight || accordionBottomLine > windowBottomLine) {
        t585__scroll(target)
    }
}

function t585__scroll(target) {
    var duration = 400;
    var start = (window.pageYOffset || document.documentElement.scrollTop) - (document.documentElement.clientTop || 0);
    var change = target - start;
    var currentTime = 0;
    var increment = 16;
    document.body.setAttribute('data-scrollable', 'true');

    function t585__easeInOutCubic(currentTime) {
        if ((currentTime /= duration / 2) < 1) {
            return change / 2 * currentTime * currentTime * currentTime + start
        } else {
            return change / 2 * ((currentTime -= 2) * currentTime * currentTime + 2) + start
        }
    }

    function t585__animateScroll() {
        currentTime += increment;
        window.scrollTo(0, t585__easeInOutCubic(currentTime));
        if (currentTime < duration) {
            setTimeout(t585__animateScroll, increment)
        } else {
            document.body.removeAttribute('data-scrollable')
        }
    }

    t585__animateScroll()
}

function t1029_init(recId) {
    t_onFuncLoad('t_card__moveClickOnCard', function () {
        t_card__moveClickOnCard(recId)
    });
    t_onFuncLoad('t_card__addFocusOnTab', function () {
        t_card__addFocusOnTab(recId)
    })
}

function t889_init(recId) {
    var rec = document.getElementById('rec' + recId);
    if (!rec) return;
    var container = rec.querySelector('.t889');
    if (!container) return;
    t889_setHeight(recId);
    window.addEventListener('resize', t_throttle(function () {
        if (window.noAdaptive && window.noAdaptive === !0 && window.isMobile) return;
        t889_setHeight(recId)
    }));
    if (typeof jQuery !== 'undefined') {
        $(container).on('displayChanged', function () {
            t889_setHeight(recId)
        })
    } else {
        container.addEventListener('displayChanged', function () {
            t889_setHeight(recId)
        })
    }
    if (window.isMobile) {
        window.addEventListener('orientationchange', function () {
            t889_setHeight(recId)
        })
    }
}

function t889_setHeight(recId) {
    var rec = document.getElementById('rec' + recId);
    if (!rec) return;
    var container = rec.querySelector('.t889');
    if (!container) return;
    var wrapper = rec.querySelector('.t889__wrapper');
    var wrapperWidth = wrapper.offsetWidth;
    var imageWrap = rec.querySelector('.t889__blockimg');
    var image = imageWrap.querySelector('img');
    var content = rec.querySelector('.t889__content');
    var textWrapperHeight = t889_outerHeight(content);
    var newImage = new Image();
    var imageSrc = image.getAttribute('data-original') || image.getAttribute('src');
    newImage.src = imageSrc;
    newImage.addEventListener('load', function () {
        if (window.innerWidth > 960) {
            var imageStyle = getComputedStyle(imageWrap, null);
            var imagePaddingTop = parseInt(imageStyle.paddingTop) || 0;
            var imagePaddingBottom = parseInt(imageStyle.paddingBottom) || 0;
            var imageNaturalHeight = image.clientHeight;
            if (!imageNaturalHeight && image.src) {
                var ratio = wrapperWidth / newImage.naturalWidth;
                imageNaturalHeight = newImage.naturalHeight * ratio
            }
            var imageHeight = imageNaturalHeight - (imagePaddingTop + imagePaddingBottom);
            if (textWrapperHeight >= imageHeight) {
                wrapper.style.height = textWrapperHeight + 'px'
            } else {
                wrapper.style.height = imageHeight + 'px'
            }
        } else {
            wrapper.style.height = null
        }
    })
}

function t889_outerHeight(element) {
    if (!element) return;
    var height = element.offsetHeight;
    var style = getComputedStyle(element);
    height += parseInt(style.marginTop) + parseInt(style.marginBottom);
    return height
}

function t764_init(recid) {
    var rec = document.getElementById('rec' + recid);
    if (!rec) return;
    t_onFuncLoad('t_sldsInit', function () {
        t_sldsInit(recid)
    });
    t_onFuncLoad('t_slds_SliderWidth', function () {
        t_slds_SliderWidth(recid)
    });
    var sliderWrapper = rec.querySelector('.t-slds__items-wrapper');
    var sliderContainer = rec.querySelector('.t-slds__container');
    var sliderWidth = sliderContainer ? sliderContainer.offsetWidth : 0;
    var sliderPos = sliderWrapper ? sliderWrapper.getAttribute('data-slider-pos') : '0';
    var pos = parseFloat(sliderPos);
    if (sliderWrapper) sliderWrapper.style.transform = 'translate3d(-' + (sliderWidth * pos) + 'px, 0, 0)';
    t_onFuncLoad('t_slds_UpdateSliderHeight', function () {
        t_slds_UpdateSliderHeight(recid)
    });
    t_onFuncLoad('t_slds_UpdateSliderArrowsHeight', function () {
        t_slds_UpdateSliderArrowsHeight(recid)
    });
    var currentBlock = rec.querySelector('.t764');
    if (currentBlock) {
        currentBlock.addEventListener('displayChanged', function () {
            t_onFuncLoad('t_slds_updateSlider', function () {
                t_slds_updateSlider(recid)
            })
        })
    }
}

function t829_init(recId) {
    var rec = document.getElementById('rec' + recId);
    if (!rec) return;
    var container = rec.querySelector('.t829');
    if (!container) return;
    var grid = rec.querySelector('.t829__grid');
    var sizer = rec.querySelector('.t829__grid-sizer');
    var items = rec.querySelectorAll('.t829__grid-item');
    var images = grid.querySelectorAll('img');
    var sizerWidth = parseInt(getComputedStyle(sizer, null).width);
    t_onFuncLoad('t_card__moveClickOnCard', function () {
        t_card__moveClickOnCard(recId)
    });
    t_onFuncLoad('t_card__addFocusOnTab', function () {
        t_card__addFocusOnTab(recId)
    });
    for (var i = 0; i < images.length; i++) {
        images[i].addEventListener('load', function () {
            if (!(grid.classList.contains('t829__container_mobile-flex') && window.innerWidth < 768)) {
                t829_initMasonry(rec, recId, grid)
            }
        })
    }
    if (!(grid.classList.contains('t829__container_mobile-flex') && window.innerWidth < 768)) {
        t829_initMasonry(rec, recId, grid);
        t829_calcColumnWidth(rec, sizerWidth, grid, sizer, items)
    }
    grid.addEventListener('touchmove', t829__updateLazyLoad);
    grid.addEventListener('scroll', t829__updateLazyLoad);
    window.addEventListener('resize', t_throttle(function () {
        if (window.noAdaptive && window.noAdaptive === !0 && window.isMobile) return;
        if (!(grid.classList.contains('t829__container_mobile-flex'))) {
            t829_initMasonry(rec, recId, grid)
        }
        if (grid.classList.contains('t829__container_mobile-flex') && window.innerWidth >= 768) {
            t829_initMasonry(rec, recId, grid)
        }
        if (!(grid.classList.contains('t829__container_mobile-flex') && window.innerWidth < 768)) {
            t829_calcColumnWidth(rec, sizerWidth, grid, sizer, items)
        }
    }));
    if (typeof jQuery !== 'undefined') {
        $(container).bind('displayChanged', function () {
            if (!(grid.classList.contains('t829__container_mobile-flex'))) {
                grid.style.height = '100vh';
                t829_initMasonry(rec, recId, grid)
            }
            if (grid.classList.contains('t829__container_mobile-flex') && window.innerWidth >= 768) {
                t829_initMasonry(rec, recId, grid)
            }
            if (!(grid.classList.contains('t829__container_mobile-flex') && window.innerWidth < 768)) {
                t829_calcColumnWidth(rec, sizerWidth, grid, sizer, items)
            }
        })
    } else {
        container.addEventListener('displayChanged', function () {
            if (!(grid.classList.contains('t829__container_mobile-flex'))) {
                t829_initMasonry(rec, recId, grid)
            }
            if (grid.classList.contains('t829__container_mobile-flex') && window.innerWidth >= 768) {
                t829_initMasonry(rec, recId, grid)
            }
            if (!(grid.classList.contains('t829__container_mobile-flex') && window.innerWidth < 768)) {
                t829_calcColumnWidth(rec, sizerWidth, grid, sizer, items)
            }
        })
    }
}

function t829_initMasonry(rec, recId, grid) {
    if (!rec) return;
    var gutterSizer = rec.querySelector('.t829__gutter-sizer');
    if (!gutterSizer) return;
    gutterSizer.style.width = '';
    var gutterSizerWidth = parseInt(getComputedStyle(gutterSizer, null).width);
    var gutterElement = (gutterSizerWidth === 40) ? 39 : '#rec' + recId + ' .t829__gutter-sizer';
    t_onFuncLoad('imagesLoaded', function () {
        imagesLoaded(grid, function () {
            new Masonry(grid, {
                itemSelector: '#rec' + recId + ' .t829__grid-item',
                columnWidth: '#rec' + recId + ' .t829__grid-sizer',
                gutter: gutterElement,
                isFitWidth: !0,
                transitionDuration: 0
            })
        })
    })
}

function t829_calcColumnWidth(rec, sizerWidth, grid, sizer, items) {
    if (!rec) return;
    var container = rec.querySelector('.t829__container');
    if (!container) return;
    grid.style.width = '';
    for (var i = 0; i < items.length; i++) {
        items[i].style.width = ''
    }
    if (sizerWidth === 0) {
        var sizerStyle = getComputedStyle(sizer, null);
        var sizerPaddingLeft = parseInt(sizerStyle.paddingLeft) || 0;
        var sizerPaddingRight = parseInt(sizerStyle.paddingRight) || 0;
        sizerWidth = sizer.clientWidth - (sizerPaddingLeft + sizerPaddingRight)
    }
    var containerStyle = getComputedStyle(container, null);
    var containerPaddingLeft = parseInt(containerStyle.paddingLeft) || 0;
    var containerPaddingRight = parseInt(containerStyle.paddingRight) || 0;
    var containerWidth = container.clientWidth - (containerPaddingLeft + containerPaddingRight);
    if (!items[0]) return;
    var itemStyle = getComputedStyle(items[0], null);
    var itemPaddingLeft = parseInt(itemStyle.paddingLeft) || 0;
    var itemPaddingRight = parseInt(itemStyle.paddingRight) || 0;
    var itemWidth = items[0].clientWidth - (itemPaddingLeft + itemPaddingRight);
    var gutterSizer = rec.querySelector('.t829__gutter-sizer');
    var gutterSizerStyle = getComputedStyle(gutterSizer, null);
    var gutterSizerPaddingLeft = parseInt(gutterSizerStyle.paddingLeft) || 0;
    var gutterSizerPaddingRight = parseInt(gutterSizerStyle.paddingRight) || 0;
    var gutterSizerWidth = gutterSizer.clientWidth - (gutterSizerPaddingLeft + gutterSizerPaddingRight);
    if (gutterSizerWidth === 40) gutterSizerWidth = 39;
    var colAmount = Math.round(containerWidth / sizerWidth);
    var newSizerWidth = Math.floor((containerWidth - gutterSizerWidth * (colAmount - 1)) / colAmount);
    if (containerWidth >= itemWidth) {
        sizer.style.width = newSizerWidth + 'px';
        for (var i = 0; i < items.length; i++) {
            items[i].style.width = newSizerWidth + 'px'
        }
    } else {
        grid.style.width = '100%';
        sizer.style.width = '100%';
        for (var i = 0; i < items.length; i++) {
            items[i].style.width = '100%'
        }
    }
}

function t829__updateLazyLoad() {
    var allRecords = document.getElementById('allrecords');
    if (!allRecords.getAttribute('data-tilda-mode')) {
        if (window.lazy === 'y' || allRecords.getAttribute('data-tilda-lazy') === 'yes') {
            t_onFuncLoad('t_lazyload_update', function () {
                t_lazyload_update()
            })
        }
    }
}

function t718_onSuccess(form) {
    form = form[0] ? form[0] : form;
    if (!form) return;
    if (form.tagName && form.tagName.toLowerCase() === 'input') {
        form = form.closest('.t-form')
    }
    var inputsWrapper = form.querySelector('.t-form__inputsbox');
    if (!inputsWrapper) return;
    var paddingTopInputs = parseInt(inputsWrapper.style.paddingTop, 10) || 0;
    var paddingBottomInputs = parseInt(inputsWrapper.style.paddingBottom, 10) || 0;
    var inputsHeight = inputsWrapper.clientHeight - (paddingTopInputs + paddingBottomInputs);
    var inputsOffset = inputsWrapper.getBoundingClientRect().top + window.pageYOffset;
    var inputsBottom = inputsHeight + inputsOffset;
    var targetOffset = form.querySelector('.t-form__successbox').getBoundingClientRect().top + window.pageYOffset;
    var target = null;
    if (window.innerWidth > 960) {
        target = targetOffset - 200
    } else {
        target = targetOffset - 100
    }
    var documentHeight = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight);
    if (targetOffset > window.pageYOffset || documentHeight - inputsBottom < window.innerHeight - 100) {
        inputsWrapper.classList.add('t718__inputsbox_hidden');
        var body = document.body;
        var paddingTopBody = parseInt(body.style.paddingTop, 10) || 0;
        var paddingBottomBody = parseInt(body.style.paddingBottom, 10) || 0;
        var bodyHeight = body.clientHeight - (paddingTopBody + paddingBottomBody);
        setTimeout(function () {
            if (window.innerHeight > bodyHeight) {
                setTimeout(function () {
                    var tildaLabel = document.querySelector('.t-tildalabel');
                    if (!tildaLabel) return;
                    t718__fadeOut(tildaLabel)
                }, 50)
            }
        }, 300)
    } else {
        t718_scrollToTop(target);
        setTimeout(function () {
            inputsWrapper.classList.add('t718__inputsbox_hidden')
        }, 400)
    }
    var successUrl = form.getAttribute('data-success-url');
    if (successUrl) {
        setTimeout(function () {
            window.location.href = successUrl
        }, 500)
    }
}

function t718_scrollToTop(target) {
    if (target === window.pageYOffset) {
        return !1
    }
    var duration = 400;
    var difference = window.pageYOffset;
    var cashedDiff = window.pageYOffset;
    var step = (Math.abs(window.pageYOffset - target) * 10) / duration;
    var scrollInterval = setInterval(function () {
        if (cashedDiff > target) {
            difference -= step
        } else {
            difference += step
        }
        window.scrollTo(0, difference);
        document.body.setAttribute('data-scrollable', 'true');
        if (cashedDiff > target && window.pageYOffset <= target) {
            document.body.removeAttribute('data-scrollable');
            clearInterval(scrollInterval)
        } else if (cashedDiff <= target && window.pageYOffset >= target) {
            document.body.removeAttribute('data-scrollable');
            window.scrollTo(0, target);
            clearInterval(scrollInterval)
        }
    }, 10);
    var scrollTimeout = setTimeout(function () {
        clearInterval(scrollInterval);
        document.body.removeAttribute('data-scrollable');
        clearTimeout(scrollTimeout)
    }, duration * 2)
}

function t718__fadeOut(element) {
    if (element.style.display === 'none') return;
    var opacity = 1;
    var timer = setInterval(function () {
        element.style.opacity = opacity;
        opacity -= 0.1;
        if (opacity <= 0.1) {
            clearInterval(timer);
            element.style.display = 'none';
            element.style.opacity = null
        }
    }, 50)
}